<?xml version="1.0" encoding="UTF-8"?>
<project default="clean" basedir="." name="flex">
	<description>
        Lucee Flex
    </description>
    <!-- set global properties for this build -->
  
  <property file="build.properties"/>
  <buildnumber file="build.number"/>


  <property name="lib" location="source/java/libs"/>
  <property name="src" location="source/java/src"/>
  <property name="res" location="source/resources"/>
  <property name="temp" location="temp"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  

  <scriptdef name="replace" language="javascript">
     <attribute name="haystack" />
     <attribute name="needle" />
     <attribute name="repl" />
     <attribute name="property" />
     <![CDATA[
      var text = attributes.get("haystack");
      var needle = attributes.get("needle");
      var repl = attributes.get("repl");
      text=text.trim();

      var regex = new RegExp(needle,'g');
      text=text.replace(regex,repl);
      project.setProperty(attributes.get("property"), text);
     ]]>
  </scriptdef>

  <path id="classpath">
    <fileset dir="${lib}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    
    <delete dir="${temp}"/>
    <delete dir="${dist}"/>

    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${temp}"/>
    <mkdir dir="${build}"/>
    <mkdir dir="${dist}/"/>
  </target>


  <target name="copy" depends="init" description="copy source file to temp" >
    <!-- copy the source -->
    <copy todir="${temp}">
      <fileset dir="${src}">
        <include name="**/*.java"/>
      </fileset>
    </copy>

  </target>
  


  <target name="compile" depends="copy" description="compile the source " >
    <!-- Compile ACF-Infinspan source -->
    <javac srcdir="${temp}" target="1.8" destdir="${build}" debug="true" debuglevel="lines,vars,source">
      <classpath refid="classpath" />
    </javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    
        <tstamp>
     <format property="NOW" pattern="yyyy-MM-dd HH:mm:ss" />
    </tstamp>

    <!-- Put everything in ${build} into .jar file -->
    <jar 
    	jarfile="${dist}/artifacts/jars/${filename}-${bundleversion}${build.number}.jar" basedir="${build}"  manifest="${src}/META-INF/MANIFEST.MF">
      <manifest>
        <attribute name="Bundle-Version" value="${bundleversion}${build.number}"/>
        <attribute name="Built-Date" value="${NOW}"/>
        <attribute name="Bundle-SymbolicName" value="${bundlename}"/>

      </manifest>
    </jar>


    <!-- copy the jars necessary -->
    <copy todir="${dist}/artifacts/jars">
      <fileset dir="${lib}">
        <include name="**/*.jar"/>
        <exclude name="**/javax.*"/>
        <exclude name="**/jsp-*"/>
        <exclude name="**/lucee.jar"/>
      </fileset>
    </copy>

    <!-- copy the resources -->
    <copy todir="${dist}/artifacts/resources">
      <fileset dir="${res}">
        <include name="**/*.xml"/>
      </fileset>
    </copy>

    <!-- Zip everything  -->
     <zip destfile="${dist}/${filename}-${bundleversion}${build.number}.zip">
        <zipfileset dir="${dist}/artifacts"/>
    </zip>


  </target>

	<target name="clean"  depends="dist" description="clean up" >
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
    <delete dir="${temp}"/>
    <delete dir="${dist}/artifacts"/>
	</target>

</project>